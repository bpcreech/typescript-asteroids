name: Deploy

on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '21.6.1'

      - run: npm install
      - run: npm run build

      # - name: Create Release
      #   id: create_release
      #   uses: rymndhng/release-on-push-action@master
      #   with:
      #     bump_version_scheme: minor
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

      - name: Tar build
        run: tar cvfz build.tar.gz ./dist

      - name: Upload Build Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build.tar.gz
          asset_name: build.tar.gz
          asset_content_type: application/tar+gzip

      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: production-files
      #     path: ./dist
